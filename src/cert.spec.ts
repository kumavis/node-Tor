import test from 'ava';
import type { CellCerts } from './messaging';
import { CertTypes, validateCertsCellForIdentities } from './cert';

const b = (s: string) => Buffer.from(s, 'hex')

// from the arti source
const fixtureCerts = {
  [CertTypes.RSA_ID_X509]: b
  [CertTypes.IDENTITY_V_SIGNING]: b('01040006CC2A01F82294B866A31F01FC5D0DA8572850A9B929545C3266558D7D2316E3B74172B00100200400DCB604DB2034B00FD16986D4ADB9D16B21CB4E4457A33DEC0F538903683E96E9FF1A5203FA27F86EF7528D89A0845D2520166E340754FFEA2AAE0F612B7CE5DA094A0236CDAC45034B0B6842C18E7F6B51B93A3CF7E60663B8AD061C30A62602'),
  [CertTypes.SIGNING_V_TLS_CERT]: b('01050006C98A03B4FD606B64E4CBD466B8D76CB131069BAE6F3AA1878857C9F624E31D77A799B8007173E5F8068431D0D3F5EE16B4C9FFD59DF373E152A87281BAE744AA5FCF72171BF4B27C4E8FC1C6A9FC5CA11058BC49647063D7903CFD9F512F89099B27BC0C'),
  [CertTypes.RSA_ID_V_IDENTITY]: b('DCB604DB2034B00FD16986D4ADB9D16B21CB4E4457A33DEC0F538903683E96E90006DA3A805CF6006F9179066534DE6B45AD47A5C469063EE462762723396DC9F25452A0A52DA3F5087DD239F2A311F6B0D4DFEFF4ABD089DC3D0237A0ABAB19EB2045B91CDCAF04BE0A72D548A27BF2E77BD876ECFE5E1BE622350DA6BF31F6E306ED896488DD5B39409B23FC3EB7B2C9F7328EB18DA36D54D80575899EA6507CCBFCDF1F'),
  // PEER_ED: b('dcb604db2034b00fd16986d4adb9d16b21cb4e4457a33dec0f538903683e96e9'),
  // PEER_RSA: b('2f1fb49bb332a9eec617e41e911c33fb3890aef3'),
}
  
const fixturePeerCertDigest = b('b4fd606b64e4cbd466b8d76cb131069bae6f3aa1878857c9f624e31d77a799b8')

const fixtureCertCell = {
  certs: Object.entries(fixtureCerts).map(([certType, cert]) => ({
    type: parseInt(certType, 10),
    body: cert,
  })),
} as CellCerts;


test('validateCertsForEd25519Identity', t => {
  t.notThrows(() => {
    validateCertsCellForIdentities(fixtureCertCell, fixturePeerCertDigest, 0, 0);
  });
});